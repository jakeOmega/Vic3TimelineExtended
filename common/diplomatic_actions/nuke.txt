nuke_diplo_action = {
    groups= {
		general
	}
	requires_approval = no

	state_selection = second_required
    second_state_list = second_country
	
	show_confirmation_box = yes

	possible = {
        has_variable = nuclear_weapon_stockpile
        var:nuclear_weapon_stockpile > 0
        OR = {
            NOT = {
                OR = {
                    has_law = law_type:law_humanitarian_regulations
                    has_law = law_type:law_limited_war
                }
            }
            any_scope_state = {
                OR = {
                    has_modifier = nuclear_strike_aftermath
                    has_modifier = tactical_nuke_aftermath
                }
            }
        }
    }

	second_state_trigger = {
        owner = {
            has_war_with = scope:country
        }
    }
    
	accept_effect = {
        save_scope_as = attacking_country
        random_list = {
            0 = {
                modifier = nuclear_strike_success_chance
                nuclear_industrial_strike = yes
                scope:target_country = {
                    trigger_event = nuclear_weapon_events.1
                    change_relations = {
                        tcountry = ROOT
                        value = -100  
                    }
                }
                trigger_event = nuclear_weapon_events.2
                post_notification = industrial_nuke_succeeds_attacker
            }
            0 = {
                modifier = nuclear_strike_fail_chance
                change_infamy = 5
                scope:target_country = {
                    trigger_event = nuclear_weapon_events.3
                    change_relations = {
                        tcountry = ROOT
                        value = -10  
                    }
                }
                trigger_event = nuclear_weapon_events.4
            }
        }
    }

	is_hostile = yes

    ai = {
		evaluation_chance = {
            value = enemy_occupation
            multiply = 10
            if = {
                limit = {
                    any_scope_war = {
                        has_war_exhaustion = {
                            target = ROOT
                            value > 100
                        }
                    }
                }
                multiply = 5
            }
            if = {
                limit = {
                    infamy < 25
                }
                multiply = 2
            }
            if = {
                limit = {
                    infamy > 75
                }
                multiply = 0.25
            }
        }

		will_select_as_second_state = {
            value = gdp
            if = {
                limit = {has_modifier=nuclear_strike_aftermath}
                multiply = 0.1
            }
            if = {
                limit = { is_incorporated = no }
                multiply = 0.1
            }
        }
		
		will_propose_with_states = {} # Checked before will_propose = {} to further cut down on state combinations the AI will do a full evaluation for
	
		will_propose = {} # Trigger for if AI will consider proposing this action (their acceptance if asked still has to be positive if action requires acceptance), default evaluates to true
		will_break = {} # Trigger for if AI will consider breaking off an existing pact of this action (their acceptance as if asked still has to be significantly negative if action requires acceptance), default evaluates to true
		
		will_propose_even_if_not_accepted = {} # Trigger for if AI will propose an action even if they think it's going to be declined, checked after will_propose
		
		accept_score = {} # If this value evaluates to above zero, AI will accept this action if proposed
		accept_break_score = {} # If this value evaluates to above zero, AI will accept breaking this pact if proposed

		propose_score = {}
	}
}