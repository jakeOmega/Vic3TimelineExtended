je_nuclear_program = {
	icon = "gfx/interface/icons/event_icons/mushroom_cloud.dds"

	group = je_group_foreign_affairs

    is_shown_when_inactive = {
		has_technology_researched = nuclear_weapons
	}

    scripted_button = increase_funding_nuclear_program
    scripted_button = decrease_funding_nuclear_program

    possible = {
        OR = {
            country_rank = rank_value:great_power
            AND = {
                country_rank = rank_value:major_power
                has_technology_researched = ICBMs
            }
            modifier:receiving_nuclear_program_aid = yes 
        }
        NOT = {
            any_scope_treaty = {
                any_scope_article = {
                    has_type = nuclear_disarmament
                    source_country = root
                }
            }
        }
    }

    immediate = {
        set_variable = {
            name = nuclear_weapon_stockpile
            value = 0
        }
        set_variable = {
            name = nuclear_weapon_program_progress
            value = 0
        }
        set_variable = {
            name = nuclear_weapons_program_first_nuke_done
            value = 0
        }
        set_variable = {
            name = nuclear_weapons_program_funding
            value = 0
        }
    }

    complete = {
		always = no
	}

	on_complete = {
        if = {
            limit = { var:nuclear_weapons_program_first_nuke_done > 0 }
            custom_tooltip = {
                text = "ADDITIONAL_NUKE_CREATED"
            }
        }
        else = {
            custom_tooltip = {
                text = "FIRST_NUKE_CREATED"
            }
        }
	}

	on_monthly_pulse = {
		effect = {
            if = {
                limit = {
                    any_scope_treaty = {
                        any_scope_article = {
                            has_type = nuclear_disarmament
                            source_country = root
                        }
                    }
                }
                set_variable = {
                    name = nuclear_weapon_stockpile
                    value = 0
                }
                set_variable = {
                    name = nuclear_weapon_program_progress
                    value = 0
                }
                remove_modifier = {
                    name = nuclear_weapon_program_funding_modifier
                }
                remove_modifier = {
                    name = nuclear_power
                }
            }
			change_variable = {
				name = nuclear_weapon_program_progress
				add = nuclear_weapon_program_monthly_progress
			}
            while = {
                limit = {var:nuclear_weapon_program_progress >= nuclear_weapon_program_goal_value}
                change_variable = {
                    name = nuclear_weapon_program_progress
                    subtract = nuclear_weapon_program_goal_value
                }
                change_variable = {
                    name = nuclear_weapon_stockpile
                    add = 1
                }
                if = {
                    limit = { var:nuclear_weapons_program_first_nuke_done = 0 }
                    set_variable = {
                        name = nuclear_weapons_program_first_nuke_done
                        value = 1
                    }
                    change_variable = {
                        name = nuclear_weapon_program_progress
                        multiply = nuclear_weapon_program_additional_nuke_progress_multiplier
                    }
                    trigger_event = { id = nuclear_weapon_events.10 }
                    save_scope_as = first_nuke_country
                    every_country = {
                        limit = {
                            NOT = { THIS = scope:first_nuke_country }
                        }
                        trigger_event = { id = nuclear_weapon_events.9 days = 14 }
                    }
                }
            }
		}
	}

	current_value = {
        value = root.var:nuclear_weapon_program_progress
	}

	goal_add_value = {
		value = nuclear_weapon_program_goal_value
	}

	progressbar = yes

	weight = 10
	should_be_pinned_by_default = yes
    can_revolution_inherit = yes
}

je_banking_cycle = {
    icon    = "gfx/interface/icons/event_icons/stock_bag.dds"
    group = je_group_internal_affairs

    is_shown_when_inactive = {
        has_technology_researched = stock_exchange
        any_scope_state = {
            any_scope_building = { is_building_type = building_urban_center level >= 10 }
        }
    }

    # Buttons
    scripted_button = cb_policy_rate_hike
    scripted_button = cb_open_market_ops
    scripted_button = cb_countercyclical_buffer
    scripted_button = cb_expand_deposit_guarantee
    scripted_button = cb_directed_credit_infrastructure
    scripted_button = cb_emergency_liquidity_program
    scripted_button = cb_moral_suasion
    scripted_button = cb_raise_margin_requirements
    scripted_button = cb_fx_devaluation
    scripted_button = cb_fx_support
    scripted_button = cb_capital_controls_outflow
    scripted_button = cb_fx_swap_lines
    scripted_button = cb_export_credit_facility
    scripted_button = cb_asset_relief_program


    possible = { always = yes }

    should_be_pinned_by_default = yes
    can_revolution_inherit      = yes

    immediate = {
        # Cycle state vars
        set_variable = { name = finance_cycle_value         value = 50 } # 0..100
        set_variable = { name = finance_cycle_momentum      value = 0 }
        set_variable = {
            name = bubble_pressure
            value = 0
        }
    }

    # Progress bar: shows remaining points as % of initial allowance at activation.
    progressbar      = no
    progress_desc    = banking_cycle_progress_desc

    status_desc = {
        first_valid = {
            triggered_desc = { desc = banking_cycle_status_panic       trigger = { var:finance_cycle_value < 10 } }
            triggered_desc = { desc = banking_cycle_status_downturn    trigger = { var:finance_cycle_value >= 10  var:finance_cycle_value < 25 } }
            triggered_desc = { desc = banking_cycle_status_stagnation  trigger = { var:finance_cycle_value >= 25  var:finance_cycle_value < 40 } }
            triggered_desc = { desc = banking_cycle_status_stable      trigger = { var:finance_cycle_value >= 40  var:finance_cycle_value < 60 } }
            triggered_desc = { desc = banking_cycle_status_expansion   trigger = { var:finance_cycle_value >= 60  var:finance_cycle_value < 75 } }
            triggered_desc = { desc = banking_cycle_status_boom        trigger = { var:finance_cycle_value >= 75  var:finance_cycle_value < 88 } }
            triggered_desc = { desc = banking_cycle_status_frenzy      trigger = { var:finance_cycle_value >= 88 } }
        }

        first_valid = {
            triggered_desc = { desc = banking_cycle_status_fast_downturn    trigger = { var:finance_cycle_momentum < -4 } }
            triggered_desc = { desc = banking_cycle_status_slow_downturn    trigger = { var:finance_cycle_momentum >= -4 var:finance_cycle_momentum < -2 } }
            triggered_desc = { desc = banking_cycle_status_neutral          trigger = { var:finance_cycle_momentum >= -2 var:finance_cycle_momentum < 2 } }
            triggered_desc = { desc = banking_cycle_status_slow_expansion   trigger = { var:finance_cycle_momentum >= 2 var:finance_cycle_momentum < 4 } }
            triggered_desc = { desc = banking_cycle_status_fast_expansion   trigger = { var:finance_cycle_momentum >= 4 } }
        }

        first_valid = {
            triggered_desc = { desc = banking_cycle_status_no_bubble          trigger = { var:bubble_pressure < 15 } }
            triggered_desc = { desc = banking_cycle_status_bubble_stable      trigger = { var:bubble_pressure >= 15 var:bubble_pressure < 35 } }
            triggered_desc = { desc = banking_cycle_status_bubble_expansion   trigger = { var:bubble_pressure >= 35 var:bubble_pressure < 65 } }
            triggered_desc = { desc = banking_cycle_status_bubble_frenzy      trigger = { var:bubble_pressure >= 65 var:bubble_pressure < 85 } }
            triggered_desc = { desc = banking_cycle_status_bubble_extreme     trigger = { var:bubble_pressure >= 85 } }
        }

        first_valid = {
            triggered_desc = { desc = BANKING_CURR_MODIFIERS trigger = { always = yes } }
        }
    }

    on_monthly_pulse = {
        effect = {
            # Update fiscal policy effect based on spending relative to GDP
            remove_modifier = financial_cycle_government_fiscal_policy_effect
            add_modifier = {
                name = financial_cycle_government_fiscal_policy_effect
                multiplier = financial_cycle_government_fiscal_policy_effect_size
            }

            # --- Cycle update ---
            # Momentum decays:
            change_variable = { name = finance_cycle_momentum multiply = 0.9 }

            change_variable = {
                name = finance_cycle_momentum
                add = "modifier:country_finance_momentum_monthly_add"
            }

            change_variable = {
                name = bubble_pressure
                add = "modifier:country_bubble_pressure_monthly_add"
            }

            change_variable = {
                name = finance_cycle_value
                add = "modifier:country_finance_value_monthly_add"
            }

            add_investment_pool = investment_pool_banking_cycle_add

            # Random nudge: -1 / 0 / +1
            random_list = {
                25 = {
                    modifier = { # Biased towards lower momentum if economy is hot
                        value =  = var:finance_cycle_value
                    }
                    change_variable = { name = finance_cycle_momentum add = -1 }
                }
                50 = { }
                25 = {
                    modifier = { # Biased towards higher momentum if economy is doing poorly
                        value = 100
                        subtract = var:finance_cycle_value
                    }
                    change_variable = { name = finance_cycle_momentum add =  1 }
                }
            }

            # Apply momentum to value and clamp 0 to 100
            change_variable = {
                name = finance_cycle_value
                add = var:finance_cycle_momentum
                }
            if = { limit = { var:finance_cycle_value < 0 }     set_variable = { name = finance_cycle_value value = 0 } }
            if = { limit = { var:finance_cycle_value > 100 }   set_variable = { name = finance_cycle_value value = 100 } }

            # clamp
            if = { limit = { var:bubble_pressure < 0 }   set_variable = { name = bubble_pressure value = 0 } }
            if = { limit = { var:bubble_pressure > 100 } set_variable = { name = bubble_pressure value = 100 } }

            # --- sudden crash check (asymmetric) ---
            # Base monthly crash chances by phase (tuneable):
            # frenzy  = 0.05*bubble_pressure over 15; boom = 0.02*bubble_pressure over 35; expansion = 0.01*bubble_pressure over 65; stable = 0.01*bubble_pressure over 85
            set_variable = { name = crash value = 0 }
            random_list = {
                0 = { 
                    modifier = {
                        add = var:bubble_pressure
                        if = {
                            limit = { var:finance_cycle_value >= 88 } # frenzy
                            subtract = 15
                            multiply = 0.05
                        }
                        else_if = {
                            limit = { var:finance_cycle_value >= 75 } # expansion
                            subtract = 35
                            multiply = 0.02
                        }
                        else_if = {
                            limit = { var:finance_cycle_value >= 60 } # boom
                            subtract = 65
                            multiply = 0.01
                        }
                        else_if = {
                            limit = { var:finance_cycle_value >= 40 } # stable
                            subtract = 85
                            multiply = 0.01
                        }
                        min = 0
                    }
                    set_variable = { name = crash value = 1 }
                }
                100 = { }
            }

            # If we set crash, execute crash:
            if = {
                limit = { var:crash > 0 }
                # Severity scales with bubble (more bubble -> likely PANIC; else DOWNTURN)
                set_variable = { name = crash_severity value = var:bubble_pressure }
                random_list = {
                    10 = {
                        change_variable = { name = crash_severity multiply = 0.5 }
                    }
                    20 = {
                        change_variable = { name = crash_severity multiply = 0.75 }
                    }
                    40 = { }
                    20 = {
                        change_variable = { name = crash_severity multiply = 1.5 }
                    }
                    10 = {
                        change_variable = { name = crash_severity multiply = 2 }
                    }
                }
                if = {
                    limit = { var:crash_severity >= 60 }
                    # hard crash → PANIC floor & negative momentum
                    set_variable   = { name = finance_cycle_value value = 10 }
                    set_variable = { name = finance_cycle_momentum value = -5 }  # overwrite momentum hard negative
                }
                else = {
                    # soft crash → DOWNTURN band & mild negative momentum
                    set_variable   = { name = finance_cycle_value value = 30 }
                    set_variable = { name = finance_cycle_momentum value = -3 }
                }
                # Clear bubble
                set_variable = { name = bubble_pressure value = 0 }
            }

            # Sync a human-readable "max" for UI text:
            set_variable = { name = banking_points_max_from_law value = banking_law_base_points_value }

            # --- Phase modifiers (remove previous; add current) ---
            remove_modifier = financial_cycle_phase_panic
            remove_modifier = financial_cycle_phase_downturn
            remove_modifier = financial_cycle_phase_stagnation
            remove_modifier = financial_cycle_phase_expansion
            remove_modifier = financial_cycle_phase_boom
            remove_modifier = financial_cycle_phase_frenzy

            if = { limit = { var:finance_cycle_value < 10 }  add_modifier = { name = financial_cycle_phase_panic } }
            else_if = { limit = { var:finance_cycle_value < 25 } add_modifier = { name = financial_cycle_phase_downturn } }
            else_if = { limit = { var:finance_cycle_value < 40 } add_modifier = { name = financial_cycle_phase_stagnation } }
            else_if = { limit = { var:finance_cycle_value < 60 } } # Stable = no national mod
            else_if = { limit = { var:finance_cycle_value < 75 } add_modifier = { name = financial_cycle_phase_expansion } }
            else_if = { limit = { var:finance_cycle_value < 88 } add_modifier = { name = financial_cycle_phase_boom } }
            else = { add_modifier = { name = financial_cycle_phase_frenzy } }

        }
    }
}



je_global_warming = {
    icon = "gfx/interface/icons/event_icons/global_warming.dds"

    group = je_group_environment

    is_shown_when_inactive = {
        has_global_variable = greenhouse_gas_emissions
    }

    possible = {
        temperature_anomaly_display > 0.1
    }

    immediate = {
    }

    complete = {
        always = no
    }

    on_monthly_pulse = {
    }

    weight = 10
    should_be_pinned_by_default = yes
}

je_state_collapse = {
    icon = "gfx/interface/icons/event_icons/event_skull.dds"

    group = je_group_internal_affairs

    is_shown_when_inactive = {
        average_sol < 5
        NOT = { is_country_type = decentralized }
    }

    possible = {
        average_sol < 4
    }

    immediate = {
        set_variable = {
            name = state_collapse_progress
            value = 0
        }
    }

    complete = {
        ROOT.var:state_collapse_progress >= 52
    }

    current_value = {
        value = root.var:state_collapse_progress
    }

    goal_add_value = {
		value = 52
	}

    on_weekly_pulse = {
        effect = {
            change_variable = {
                name = state_collapse_progress
                add = 1
            }
            if = {
                limit = { var:state_collapse_progress >= 52 }
                set_variable = {
                    name = state_collapse_progress
                    value = 0
                }
                add_modifier = {
                    name = failed_state_modifier
                    days = long_modifier_time
                    is_decaying = yes
                }
                every_scope_state = {
                    if = {
                        limit = {
                            has_building = building_barracks
                        }
                        remove_building = building_barracks
                    }
                    if = {
                        limit = {
                            has_building = building_naval_base
                        }
                        remove_building = building_naval_base
                    }
                    if = {
                        limit = {
                            has_building = building_port
                        }
                        remove_building = building_port
                    }
                    if = {
                        limit = {
                            has_building = building_railway
                        }
                        remove_building = building_railway
                    }
                    if = {
                        limit = {
                            has_building = building_university
                        }
                        remove_building = building_university
                    }
                    if = {
                        limit = {
                            has_building = building_government_administration
                        }
                        remove_building = building_government_administration
                    }
                }
                activate_law = law_type:law_no_schools
                activate_law = law_type:law_no_health_system
                activate_law = law_type:law_no_police
                activate_law = law_type:law_no_social_security
                activate_law = law_type:law_no_workers_rights
                activate_law = law_type:law_no_colonial_affairs
                activate_law = law_type:law_no_home_affairs
                activate_law = law_type:law_no_migration_controls
                activate_law = law_type:law_no_national_bank
                activate_law = law_type:law_no_ministry_of_commerce
                activate_law = law_type:law_no_ministry_of_consumer_protection
                activate_law = law_type:law_no_ministry_of_culture
                activate_law = law_type:law_no_ministry_of_foreign_affairs
                activate_law = law_type:law_no_ministry_of_intelligence_and_security
                activate_law = law_type:law_no_ministry_of_international_aid
                activate_law = law_type:law_no_ministry_of_labor
                activate_law = law_type:law_no_ministry_of_propaganda
                activate_law = law_type:law_no_ministry_of_refugee_affairs
                activate_law = law_type:law_no_ministry_of_religion
                activate_law = law_type:law_no_ministry_of_science
                activate_law = law_type:law_no_ministry_of_the_environment
                activate_law = law_type:law_no_ministry_of_thought_control
                activate_law = law_type:law_no_ministry_of_urban_planning
                activate_law = law_type:law_no_ministry_of_war
            }
        }
	}
    weight = 10
    should_be_pinned_by_default = yes

    progressbar = yes

    can_deactivate = yes
}

je_create_new_religion = {
    icon = "gfx/interface/icons/event_icons/event_portrait.dds"

    group = je_group_internal_affairs

    is_shown_when_inactive = {
        AND = {
            NOT = { country_has_state_religion = rel:custom_religion_christian }
            NOT = { country_has_state_religion = rel:custom_religion_muslim }
            NOT = { country_has_state_religion = rel:custom_religion_jewish }
            NOT = { country_has_state_religion = rel:custom_religion_eastern }
            NOT = { country_has_state_religion = rel:custom_religion_animist }
            NOT = { country_has_state_religion = rel:custom_religion_buddhist }
            NOT = { country_has_state_religion = rel:custom_religion_custom }
        }
        has_game_rule = custom_religions_allowed
    }

    scripted_button = select_ideology_traditionalist_economy
    scripted_button = deselect_ideology_traditionalist_economy
    scripted_button = select_ideology_free_market_economy
    scripted_button = deselect_ideology_free_market_economy
    scripted_button = select_ideology_socialist_economy
    scripted_button = deselect_ideology_socialist_economy
    scripted_button = select_ideology_social_democratic_economy
    scripted_button = deselect_ideology_social_democratic_economy
    scripted_button = select_ideology_imperial_cult_economy
    scripted_button = deselect_ideology_imperial_cult_economy
    scripted_button = select_ideology_theocratic_economy
    scripted_button = deselect_ideology_theocratic_economy
    scripted_button = select_ideology_traditionalist_society
    scripted_button = deselect_ideology_traditionalist_society
    scripted_button = select_ideology_inclusive_society
    scripted_button = deselect_ideology_inclusive_society
    scripted_button = select_ideology_totalitarian_society
    scripted_button = deselect_ideology_totalitarian_society
    scripted_button = select_ideology_meritocratic_society
    scripted_button = deselect_ideology_meritocratic_society
    scripted_button = select_ideology_imperial_cult_society
    scripted_button = deselect_ideology_imperial_cult_society
    scripted_button = select_ideology_theocratic_society
    scripted_button = deselect_ideology_theocratic_society
    scripted_button = select_ideology_aristocratic_governance
    scripted_button = deselect_ideology_aristocratic_governance
    scripted_button = select_ideology_technocratic_governance
    scripted_button = deselect_ideology_technocratic_governance
    scripted_button = select_ideology_republican_governance
    scripted_button = deselect_ideology_republican_governance
    scripted_button = select_ideology_corporate_governance
    scripted_button = deselect_ideology_corporate_governance
    scripted_button = select_ideology_imperial_cult_governance
    scripted_button = deselect_ideology_imperial_cult_governance
    scripted_button = select_ideology_theocratic_governance
    scripted_button = deselect_ideology_theocratic_governance 
    scripted_button = select_ideology_pacifist_outlook
    scripted_button = deselect_ideology_pacifist_outlook
    scripted_button = select_ideology_militarist_outlook
    scripted_button = deselect_ideology_militarist_outlook
    scripted_button = select_ideology_isolationist_outlook
    scripted_button = deselect_ideology_isolationist_outlook
    scripted_button = select_ideology_exploitative_outlook
    scripted_button = deselect_ideology_exploitative_outlook
    scripted_button = select_ideology_imperialist_outlook
    scripted_button = deselect_ideology_imperialist_outlook
    scripted_button = select_ideology_theocratic_outlook
    scripted_button = deselect_ideology_theocratic_outlook
    scripted_button = select_trait_traditionalist_loyal
    scripted_button = deselect_trait_traditionalist_loyal
    scripted_button = select_trait_market_liberal_loyal
    scripted_button = deselect_trait_market_liberal_loyal
    scripted_button = select_trait_social_democrat_loyal
    scripted_button = deselect_trait_social_democrat_loyal
    scripted_button = select_trait_totalitarian_loyal
    scripted_button = deselect_trait_totalitarian_loyal
    scripted_button = select_trait_imperial_cult_loyal
    scripted_button = deselect_trait_imperial_cult_loyal
    scripted_button = select_trait_theocratic_loyal
    scripted_button = deselect_trait_theocratic_loyal
    scripted_button = select_trait_traditionalist_happy
    scripted_button = deselect_trait_traditionalist_happy
    scripted_button = select_trait_market_liberal_happy
    scripted_button = deselect_trait_market_liberal_happy
    scripted_button = select_trait_social_democrat_happy
    scripted_button = deselect_trait_social_democrat_happy
    scripted_button = select_trait_totalitarian_happy
    scripted_button = deselect_trait_totalitarian_happy
    scripted_button = select_trait_imperial_cult_happy
    scripted_button = deselect_trait_imperial_cult_happy
    scripted_button = select_trait_theocratic_happy
    scripted_button = deselect_trait_theocratic_happy
    scripted_button = select_trait_traditionalist_unhappy
    scripted_button = deselect_trait_traditionalist_unhappy
    scripted_button = select_trait_market_liberal_unhappy
    scripted_button = deselect_trait_market_liberal_unhappy
    scripted_button = select_trait_social_democrat_unhappy
    scripted_button = deselect_trait_social_democrat_unhappy
    scripted_button = select_trait_totalitarian_unhappy
    scripted_button = deselect_trait_totalitarian_unhappy
    scripted_button = select_trait_imperial_cult_unhappy
    scripted_button = deselect_trait_imperial_cult_unhappy
    scripted_button = select_trait_theocratic_unhappy
    scripted_button = deselect_trait_theocratic_unhappy
    scripted_button = select_name_a
    scripted_button = deselect_name_a
    scripted_button = select_name_b
    scripted_button = deselect_name_b
    scripted_button = select_name_c
    scripted_button = deselect_name_c
    scripted_button = select_name_d
    scripted_button = deselect_name_d
    scripted_button = select_name_e
    scripted_button = deselect_name_e
    scripted_button = select_name_f
    scripted_button = deselect_name_f
    scripted_button = select_name_g
    scripted_button = deselect_name_g
    scripted_button = select_name_h
    scripted_button = deselect_name_h
    scripted_button = select_name_i
    scripted_button = deselect_name_i
    scripted_button = select_name_j
    scripted_button = deselect_name_j
    scripted_button = select_name_k
    scripted_button = deselect_name_k
    scripted_button = select_name_l
    scripted_button = deselect_name_l
    scripted_button = select_name_m
    scripted_button = deselect_name_m
    scripted_button = select_name_n
    scripted_button = deselect_name_n
    scripted_button = select_name_o
    scripted_button = deselect_name_o
    scripted_button = select_name_p
    scripted_button = deselect_name_p
    scripted_button = select_name_q
    scripted_button = deselect_name_q
    scripted_button = select_name_r
    scripted_button = deselect_name_r
    scripted_button = select_name_s
    scripted_button = deselect_name_s
    scripted_button = select_name_t
    scripted_button = deselect_name_t
    scripted_button = select_christian
    scripted_button = deselect_christian
    scripted_button = select_muslim
    scripted_button = deselect_muslim
    scripted_button = select_judaism
    scripted_button = deselect_judaism
    scripted_button = select_eastern
    scripted_button = deselect_eastern
    scripted_button = select_animist
    scripted_button = deselect_animist
    scripted_button = select_buddhist
    scripted_button = deselect_buddhist
    scripted_button = select_custom
    scripted_button = deselect_custom
    scripted_button = custom_religion_back
    scripted_button = custom_religion_next
    scripted_button = create_new_religion

    possible = {
        is_ai = no
    }

    immediate = {
        set_variable = {
            name = selected_idelogies
            value = 0
        }
        set_variable = {
            name = selected_traits
            value = 0
        }
        set_variable = {
            name = selected_name
            value = 0
        }
        set_variable = {
            name = selected_religion_group
            value = 0
        }
        set_variable = {
            name = current_stage
            value = 1
        }
    }

    complete = {
        OR = {
            country_has_state_religion = rel:custom_religion_christian
            country_has_state_religion = rel:custom_religion_muslim
            country_has_state_religion = rel:custom_religion_jewish
            country_has_state_religion = rel:custom_religion_eastern
            country_has_state_religion = rel:custom_religion_animist
            country_has_state_religion = rel:custom_religion_buddhist
            country_has_state_religion = rel:custom_religion_custom
        }
    }

    on_weekly_pulse = {
    }

    weight = 10
    should_be_pinned_by_default = yes
    can_deactivate = yes
}